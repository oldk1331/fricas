name: FriCAS CI on Windows on CCL

on: [push, pull_request]

jobs:
  build:

    runs-on: windows-2022
    timeout-minutes: 30
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        install: make mingw-w64-x86_64-gcc mingw-w64-x86_64-gmp gmp-devel zip unzip

    - uses: actions/checkout@v4
    - name: configure and make
      run: |
        mkdir ../build && cd ../build
        wget https://github.com/Clozure/ccl/releases/download/v1.13/ccl-1.13-windowsx86.zip
        unzip ccl-1.13-windowsx86.zip
        ../fricas/configure --with-lisp=`pwd`/ccl/wx86cl64.exe --enable-gmp || cat config.log
        make -j4 --output-sync

    - name: make check
      run: cd ../build && make check -j4 --output-sync

    - name: Create artifact archives
      run: |
        test "$GITHUB_REF_TYPE" != "tag" && rm -r ../build/target/*/src
        rm ../build/target/x86_64-w64-mingw32/bin/{fricas,fricas-readline}
        mv ../build/target/x86_64-w64-mingw32 FriCAS-windows-x86_64
        cp /mingw64/bin/libgmp-10.dll FriCAS-windows-x86_64/lib/
        zip -r FriCAS-windows-x86_64-${{ github.sha }}.zip FriCAS-windows-x86_64

    - name: Upload Windows binary
      uses: actions/upload-artifact@v4
      with:
        name: FriCAS-windows-x86_64-binary
        path: FriCAS-windows-x86_64-${{ github.sha }}.zip

    - name: Upload to nightly release
      if: ${{ github.event_name == 'push' && ( github.event.ref == 'refs/heads/master' || github.ref_type == 'tag' ) && github.repository == 'fricas/fricas' }}
      ## RELEASE_ID is:
      ## `curl https://api.github.com/${REPO_URL}/tags/nightly | jq .id`
      run: |
        export REPO_URL=repos/fricas/fricas-nightly-builds/releases
        export RELEASE_ID=74905307
        export TIMESTAMP=$(date +%Y-%m-%dT%H.%M)
        export SHA=$(echo ${{ github.sha }} | cut -c 1-8)
        export FILENAME1=FriCAS-${TIMESTAMP}-windows-x86_64-${SHA}.zip
        export FILENAME2=fricas-${GITHUB_REF_NAME}-windows-x64.zip
        export FILENAME=$(test "$GITHUB_REF_TYPE" != "tag" && echo $FILENAME1 || echo $FILENAME2)
        export URL=https://uploads.github.com/${REPO_URL}/${RELEASE_ID}/assets
        curl -v -X POST -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.releasetoken }}" \
            "${URL}?name=${FILENAME}" \
            --data-binary "@FriCAS-windows-x86_64-${{ github.sha }}.zip" \
            -H "Content-Type: application/zip" || true
